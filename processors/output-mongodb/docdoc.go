// Code generated by "bitfanDoc "; DO NOT EDIT
package mongodb

import "github.com/awillis/bitfan/processors/doc"

func (p *processor) Doc() *doc.Processor {
	return &doc.Processor{
		Name:       "mongodb",
		ImportPath: "github.com/awillis/bitfan/processors/output-mongodb",
		Doc:        "",
		DocShort:   "",
		Options: &doc.ProcessorOptions{
			Doc: "",
			Options: []*doc.ProcessorOption{
				&doc.ProcessorOption{
					Name:           "Collection",
					Alias:          "",
					Doc:            "The collection to use. This value can use %{foo} values to dynamically\nselect a collection based on data in the event",
					Required:       false,
					Type:           "string",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Database",
					Alias:          "",
					Doc:            "The database to use",
					Required:       false,
					Type:           "string",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "GenerateId",
					Alias:          "",
					Doc:            "If true, an \"_id\" field will be added to the document before insertion.\nThe \"_id\" field will use the timestamp of the event and overwrite an\nexisting \"_id\" field in the event",
					Required:       false,
					Type:           "bool",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Isodate",
					Alias:          "",
					Doc:            "If true, store the @timestamp field in mongodb as an ISODate type\ninstead of an ISO8601 string. For more information about this,\nsee http://www.mongodb.org/display/DOCS/Dates",
					Required:       false,
					Type:           "bool",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Retry_delay",
					Alias:          "",
					Doc:            "Number of seconds to wait after failure before retrying",
					Required:       false,
					Type:           "int",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Uri",
					Alias:          "",
					Doc:            "a MongoDB URI to connect to See http://docs.mongodb.org/manual/reference/connection-string/",
					Required:       false,
					Type:           "string",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
			},
		},
		Ports: []*doc.ProcessorPort{},
	}
}
