// Code generated by "bitfanDoc "; DO NOT EDIT
package pop3processor

import "github.com/awillis/bitfan/processors/doc"

func (p *processor) Doc() *doc.Processor {
	return &doc.Processor{
		Name:       "pop3processor",
		ImportPath: "github.com/awillis/bitfan/processors/pop3",
		Doc:        "Periodically scan an POP3 mailbox for new emails.",
		DocShort:   "Read mails from POP3 server",
		Options: &doc.ProcessorOptions{
			Doc: "",
			Options: []*doc.ProcessorOption{
				&doc.ProcessorOption{
					Name:           "processors.CommonOptions",
					Alias:          ",squash",
					Doc:            "",
					Required:       false,
					Type:           "processors.CommonOptions",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Interval",
					Alias:          "interval",
					Doc:            "When new mail should be retreived from POP3 server ?\nNothing by default, as this processor can be used in filter",
					Required:       false,
					Type:           "interval",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Host",
					Alias:          "host",
					Doc:            "POP3 host name",
					Required:       true,
					Type:           "string",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Port",
					Alias:          "port",
					Doc:            "POP3 server's port.\n\nWhen empty and secure is true (pop3s) the default port number is 995",
					Required:       false,
					Type:           "int",
					DefaultValue:   "110",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Secure",
					Alias:          "secure",
					Doc:            "Use TLS POP3S connexion with server.\nThe default pop3s port is 995 in this case",
					Required:       false,
					Type:           "bool",
					DefaultValue:   "false",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Username",
					Alias:          "username",
					Doc:            "POP3 mailbox Username",
					Required:       true,
					Type:           "string",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Password",
					Alias:          "password",
					Doc:            "POP3 mailbox Password\nyou may use an env variable to pass value, like password => \"${BITFAN_POP3_PASSWORD}\"",
					Required:       true,
					Type:           "string",
					DefaultValue:   nil,
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "DialTimeout",
					Alias:          "dial_timeout",
					Doc:            "How long to wait for the server to respond ?\n(in second)",
					Required:       false,
					Type:           "int",
					DefaultValue:   "30",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "Delete",
					Alias:          "delete",
					Doc:            "Should delete message after retreiving it ?\n\nWhen false, this processor will use sinceDB to not retreive an already seen message",
					Required:       false,
					Type:           "bool",
					DefaultValue:   "true",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "StripAttachments",
					Alias:          "strip_attachments",
					Doc:            "Add Attachements, Inlines, in the produced event ?\nWhen false Parts are added like\n```\n \"parts\": {\n  {\n    \"Size\":        336303,\n    \"Content\":     $$ContentAsBytes$$,\n    \"Type\":        \"inline\",\n    \"ContentType\": \"image/png\",\n    \"Disposition\": \"inline\",\n    \"FileName\":    \"Capture d’écran 2018-01-12 à 12.11.52.png\",\n  },\n  {\n    \"Content\":     $$ContentAsBytes$$,\n    \"Type\":        \"attachement\",\n    \"ContentType\": \"application/pdf\",\n    \"Disposition\": \"attachment\",\n    \"FileName\":    \"58831639.pdf\",\n    \"Size\":        14962,\n  },\n},\n```",
					Required:       false,
					Type:           "bool",
					DefaultValue:   "false",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "VerifyCert",
					Alias:          "verify_cert",
					Doc:            "When using a secure pop connexion (POP3S) should server'cert be verified ?",
					Required:       false,
					Type:           "bool",
					DefaultValue:   "true",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "SincedbPath",
					Alias:          "sincedb_path",
					Doc:            "Path of the sincedb database file\n\nThe sincedb database keeps track of the last seen message\n\nSet it to `\"/dev/null\"` to not persist sincedb features\n\nTracks are done by host and username combination, you can customize this if needed giving a specific path",
					Required:       false,
					Type:           "string",
					DefaultValue:   ": Host@Username",
					PossibleValues: []string{},
					ExampleLS:      ": sincedb_path => \"/dev/null\"",
				},
				&doc.ProcessorOption{
					Name:           "AddRawMessage",
					Alias:          "add_raw_message",
					Doc:            "Add a field to event with the raw message data ?",
					Required:       false,
					Type:           "bool",
					DefaultValue:   "false",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
				&doc.ProcessorOption{
					Name:           "AddAllHeaders",
					Alias:          "add_all_headers",
					Doc:            "Add a field to event with all headers as hash ?",
					Required:       false,
					Type:           "bool",
					DefaultValue:   "false",
					PossibleValues: []string{},
					ExampleLS:      "",
				},
			},
		},
		Ports: []*doc.ProcessorPort{},
	}
}
