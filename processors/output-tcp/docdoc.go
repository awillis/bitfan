// Code generated by "bitfanDoc -processor output-tcp"; DO NOT EDIT
package tcpoutput

import "bitfan/processors/doc"

func (p *processor) Doc() *doc.Processor {
	return &doc.Processor{
  Behavior:   "",
  Name:       "tcpoutput",
  ImportPath: "bitfan/processors/output-tcp",
  Doc:        "",
  DocShort:   "",
  Options:    &doc.ProcessorOptions{
    Doc:     "",
    Options: []*doc.ProcessorOption{
      &doc.ProcessorOption{
        Name:           "Codec",
        Alias:          "codec",
        Doc:            "The codec used for input data. Input codecs are a convenient method for decoding\nyour data before it enters the input, without needing a separate filter in your bitfan pipeline",
        Required:       false,
        Type:           "codec",
        DefaultValue:   "line",
        PossibleValues: []string{
          "json",
          "line",
          "pp",
          "rubydebug",
        },
        ExampleLS: "",
      },
      &doc.ProcessorOption{
        Name:           "Host",
        Alias:          "host",
        Doc:            "",
        Required:       true,
        Type:           "string",
        DefaultValue:   nil,
        PossibleValues: []string{},
        ExampleLS:      "",
      },
      &doc.ProcessorOption{
        Name:           "Port",
        Alias:          "port",
        Doc:            "",
        Required:       true,
        Type:           "uint",
        DefaultValue:   nil,
        PossibleValues: []string{},
        ExampleLS:      "",
      },
      &doc.ProcessorOption{
        Name:           "KeepAlive",
        Alias:          "keepalive",
        Doc:            "Turn this on to enable HTTP keepalive support. Default value is true",
        Required:       false,
        Type:           "bool",
        DefaultValue:   "true",
        PossibleValues: []string{},
        ExampleLS:      "",
      },
      &doc.ProcessorOption{
        Name:           "RequestTimeout",
        Alias:          "request_timeout",
        Doc:            "Timeout (in seconds) for the entire request. Default value is 60",
        Required:       false,
        Type:           "uint",
        DefaultValue:   "30",
        PossibleValues: []string{},
        ExampleLS:      "",
      },
      &doc.ProcessorOption{
        Name:           "RetryInterval",
        Alias:          "retry_interval",
        Doc:            "",
        Required:       false,
        Type:           "uint",
        DefaultValue:   "10",
        PossibleValues: []string{},
        ExampleLS:      "",
      },
    },
  },
  Ports: []*doc.ProcessorPort{},
}
}