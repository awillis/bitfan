{
  "Doc": "Listen and read a http request to build events with it.\n\nProcessor respond with a HTTP code as :\n\n* `202` when request has been accepted, in body : the total number of event created\n* `500` when an error occurs, in body : an error description\n\nUse codecs to process body content as json / csv / lines / json lines / ....\n\nURL is available as http://webhookhost/pluginLabel/URI\n\n* webhookhost is defined by bitfan at startup\n* pluginLabel is defined in pipeline configuration, it's the named processor if you put one, or `input_httpserver` by default\n* URI is defined in plugin configuration (see below)",
  "DocShort": "Reads events from standard input",
  "ImportPath": "bitfan/processors/input-httpserver",
  "Name": "httpserverprocessor",
  "Options": {
    "Doc": "",
    "Options": [
      {
        "Alias": ",squash",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "processors.CommonOptions",
        "PossibleValues": null,
        "Required": false,
        "Type": "processors.CommonOptions"
      },
      {
        "Alias": "",
        "DefaultValue": "\"plain\"",
        "Doc": "The codec used for input data. Input codecs are a convenient method for decoding\nyour data before it enters the input, without needing a separate filter in your bitfan pipeline\n\nDefault decode http request as plain data, response is json encoded.\nSet multiple codec with role to customize",
        "ExampleLS": "",
        "Name": "Codec",
        "PossibleValues": null,
        "Required": false,
        "Type": "codec"
      },
      {
        "Alias": "",
        "DefaultValue": "\"events\"",
        "Doc": "URI path",
        "ExampleLS": "",
        "Name": "Uri",
        "PossibleValues": null,
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "headers",
        "DefaultValue": null,
        "Doc": "Headers to send back into each outgoing response\n@LSExample {\"X-Processor\" =\u003e \"bitfan\"}",
        "ExampleLS": "",
        "Name": "Headers",
        "PossibleValues": null,
        "Required": false,
        "Type": "hash"
      },
      {
        "Alias": "body",
        "DefaultValue": "[\"uuid\"]",
        "Doc": "What to send back to client ?",
        "ExampleLS": "",
        "Name": "Body",
        "PossibleValues": null,
        "Required": false,
        "Type": "array"
      }
    ]
  },
  "Ports": []
}