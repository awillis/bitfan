{
  "Doc": "HTTPPoller allows you to intermittently poll remote HTTP URL, decode the output into an event",
  "DocShort": "",
  "ImportPath": "bitfan/processors/httppoller",
  "Name": "httppoller",
  "Options": {
    "Doc": "",
    "Options": [
      {
        "Alias": ",squash",
        "DefaultValue": null,
        "Doc": "",
        "ExampleLS": "",
        "Name": "processors.CommonOptions",
        "PossibleValues": null,
        "Required": false,
        "Type": "processors.CommonOptions"
      },
      {
        "Alias": "codec",
        "DefaultValue": "\"plain\"",
        "Doc": "The codec used for input data. Input codecs are a convenient method for decoding\nyour data before it enters the input, without needing a separate filter in your bitfan pipeline",
        "ExampleLS": "",
        "Name": "Codec",
        "PossibleValues": null,
        "Required": false,
        "Type": "codec"
      },
      {
        "Alias": "interval",
        "DefaultValue": null,
        "Doc": "Use CRON or BITFAN notation",
        "ExampleLS": "interval =\u003e \"every_10s\"",
        "Name": "Interval",
        "PossibleValues": null,
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "method",
        "DefaultValue": "\"GET\"",
        "Doc": "Http Method",
        "ExampleLS": "",
        "Name": "Method",
        "PossibleValues": null,
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "headers",
        "DefaultValue": null,
        "Doc": "Define headers for the request.",
        "ExampleLS": "headers =\u003e {\"User-Agent\":\"Bitfan\",\"Accept\":\"application/json\"}",
        "Name": "Headers",
        "PossibleValues": null,
        "Required": false,
        "Type": "hash"
      },
      {
        "Alias": "body",
        "DefaultValue": null,
        "Doc": "The request body (e.g. for an HTTP POST request). No default body is specified",
        "ExampleLS": "",
        "Name": "Body",
        "PossibleValues": null,
        "Required": false,
        "Type": "location"
      },
      {
        "Alias": "url",
        "DefaultValue": null,
        "Doc": "URL",
        "ExampleLS": "url=\u003e \"http://google.fr\"",
        "Name": "Url",
        "PossibleValues": null,
        "Required": true,
        "Type": "string"
      },
      {
        "Alias": "target",
        "DefaultValue": "\"output\"",
        "Doc": "When data is an array it stores the resulting data into the given target field.\nWhen target is \"\" or \".\" it try to store retreived values at the root level of produced event\n(usefull with json content -\u003e codec)",
        "ExampleLS": "",
        "Name": "Target",
        "PossibleValues": null,
        "Required": false,
        "Type": "string"
      },
      {
        "Alias": "ignore_failure",
        "DefaultValue": "true",
        "Doc": "When true, unsuccessful HTTP requests, like unreachable connections, will\nnot raise an event, but a log message.\nWhen false an event is generated with a tag _http_request_failure",
        "ExampleLS": "",
        "Name": "IgnoreFailure",
        "PossibleValues": null,
        "Required": false,
        "Type": "bool"
      },
      {
        "Alias": "var",
        "DefaultValue": null,
        "Doc": "You can set variable to be used in Body by using ${var}.\neach reference will be replaced by the value of the variable found in Body's content\nThe replacement is case-sensitive.",
        "ExampleLS": "var =\u003e {\"hostname\"=\u003e\"myhost\",\"varname\"=\u003e\"varvalue\"}",
        "Name": "Var",
        "PossibleValues": null,
        "Required": false,
        "Type": "hash"
      }
    ]
  },
  "Ports": []
}